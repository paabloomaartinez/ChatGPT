[{ "_id": "6478844aa6b50346aa9d16b7", "titulo": "fundamentos", "respuestas_posibles":8, "questions": [ { "tipo": "test", "preguntas": [ { "pregunta": "¿Cuál es el propósito principal de la instancia de 'datos' en un componente?", "opciones": [ "a) Definir propiedades computadas", "b) Manejar las iteraciones del usuario", "c) Definir variables", "d) Definir métodos para los componentes" ], "respuesta_correcta": 2 }, { "pregunta": "¿Cuál es la forma correcta de incluir Vue.js en un proyecto HTML?", "opciones": [ "a) Descargar el archivo 'vue.js' y enlazarlo en el archivo HTML utilizando la etiqueta <script>", "b) Instalarlo a través de npm y luego importarlo en el archivo HTML utilizando la etiqueta <script>", "c) Incluirlo utilizando un CDN y enlazarlo en el archivo HTML utilizando la etiqueta <script>" ], "respuesta_correcta": 2 }, { "pregunta": "¿Cuál es la extensión recomendada en VSCode para el desarrollo?", "opciones": [ "a) Vue Development Extension", "b) Vue.js Tools", "c) Vue.js IDE", "d) Vetur" ], "respuesta_correcta": 3 }, { "pregunta": "¿Cuál es el comando utilizado en la terminal de VSCode para crear una nueva aplicación utilizando Vue CLI?", "opciones": [ "a) vue init", "b) vue create", "c) vue new", "d) vue app" ], "respuesta_correcta": 1 } ] }, { "tipo": "verdadero_falso", "preguntas": [ { "pregunta": "La forma correcta de crear un nuevo template es crear un nuevo archivo .vue y definir el template dentro de la sección <template> en ese archivo.", "respuesta_correcta": "verdadero" } ] }, { "tipo": "completar_codigo", "preguntas": [ { "pregunta": "Completa el siguiente fragmento de código para crear un script que muestre un mensaje en la consola cuando se carga la página:", "codigo": "<script>\n  ...() {\n    console.log('¡Página cargada!');\n  }\n</script>", "respuesta_correcta": [ "mounted" ] }, { "pregunta": "Utilice la interpolación de texto para mostrar el valor de la propiedad de datos del 'mensaje'.", "codigo": "<div id=\"app\">\n  {...}\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\n  const app = Vue.createApp({\n    data() {\n      return {\n        message: \"Hello World!\"\n      }\n    }\n  })\n  app.mount('#app')\n</script>", "respuesta_correcta": [ "{ message }" ] }, { "pregunta": "Completa el siguiente fragmento de código para crear una instancia de Vue y montarla en el elemento con el id \"app\":", "codigo":"const app = new ...({\n  el: '#...',\n  data: {\n    message: '¡Hola Vue!'\n  }\n})", "respuesta_correcta": [ "Vue", "app" ] }, { "pregunta": "Completa el siguiente fragmento de código para hacer que el botón con el id \"button\" llame a un método llamado \"saludar\" cuando se hace clic:", "codigo":"<button id=\"...\" @click=\"...\">Click me</button>", "respuesta_correcta": [ "button", "saludar" ] }, { "pregunta": "Completa el siguiente fragmento de código para crear un método llamado \"incrementCounter\" que incrementa el valor de la propiedad \"counter\" en 1 cada vez que se llama:", "codigo": "data() {\n  return {\n    counter: 0\n  };\n},\nmethods: {\n  ...() {\n    this. ...;\n  }\n}", "respuesta_correcta": [ "incrementCounter", "counter++" ] } ] } ] },{ "_id": "6478844aa6b50346aa9d16b8", "titulo": "directivas", "respuestas_posibles":3, "questions": [ { "tipo": "test", "preguntas": [ { "pregunta": "¿Cuál es la directiva que se utiliza para enlazar un atributo HTML a una expresión en el modelo de datos?", "opciones": [ "a) v-on", "b) v-bind", "c) v-model", "d) v-show" ], "respuesta_correcta": 1 }, { "pregunta": "¿Cuál es la directiva que se utiliza para ejecutar una función cuando ocurre un evento?", "opciones": [ "a) v-on", "b) v-bind", "c) v-model", "d) v-show" ], "respuesta_correcta": 0 } ] }, { "tipo": "verdadero_falso", "preguntas": [ { "pregunta": "Identifica si en este fragmento de código se utiliza bien la directiva v-if\n\nEjemplo:\n\n<div id=\"app\">\n  <p v-for=\"item in items\">{{ item }}</p>\n</div>\n\n<script>\n  new Vue({\n    el: '#app',\n    data: {\n      items: ['Manzana', 'Banana', 'Naranja']\n    }\n  });\n</script>", "respuesta_correcta": "falso" }, { "pregunta": "La directiva v-if se utiliza para mostrar u ocultar un elemento basado en una expresión booleana.", "respuesta_correcta": "verdadero" } ] }, { "tipo": "completar_codigo", "preguntas": [ { "pregunta": "Rellene la parte que falta para conectar el atributo de clase a la propiedad de datos", "codigo": "\"myClass\".\n <p ...:class=\"myClass\"></p>", "respuesta_correcta": [ "v-bind" ] }, { "pregunta": "Complete el código que falta para que el usuario vea el texto 'en stock' o 'no en stock'. <div id=\"app\">\n  <p ...=\"typewritersInStock\">\n    in stock\n  </p>\n  <p ...>\n    not in stock\n  </p>\n</div>\n\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\n  data() {\n    return {\n      typewritersInStock: true\n    }\n  }\n})\napp.mount('#app')\n</script>", "codigo": "<div id=\"app\">\n  <p ...=\"typewritersInStock\">\n    in stock\n  </p>\n  <p ...>\n    not in stock\n  </p>\n</div>\n\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\nconst app = Vue.createApp({\n  data() {\n    return {\n      typewritersInStock: true\n    }\n  }\n})\napp.mount('#app')\n</script>", "respuesta_correcta": [ "v-if", "v-else" ] } ] } ] },{ "_id": "6478844aa6b50346aa9d16b9", "titulo": "metodos", "respuestas_posibles":3, "questions": [ { "tipo": "test", "preguntas": [ { "pregunta": "¿Cuál de los siguientes métodos de ciclo de vida de Vue.js se ejecuta justo después de que la instancia de Vue haya sido montada en el DOM?", "opciones": [ "a) mounted()", "b) created()", "c) updated()", "d) destroyed()" ], "respuesta_correcta": 0 }, { "pregunta": "¿Cuál de los siguientes métodos de Vue.js se utiliza para detectar cambios en los datos de la instancia de Vue?", "opciones": [ "a) watch()", "b) computed()", "c) created()", "d) updated()" ], "respuesta_correcta": 0 } ] }, { "tipo": "verdadero_falso", "preguntas": [ { "pregunta": "El método \"updated()\" de Vue.js se ejecuta justo antes de que la instancia de Vue sea destruida.", "respuesta_correcta": "falso" }, { "pregunta": "El método \"created()\" de Vue.js se utiliza para realizar tareas de configuración adicional después de que se haya creado una instancia de Vue.", "respuesta_correcta": "verdadero" } ] }, { "tipo": "completar_codigo", "preguntas": [ { "pregunta": "Escriba el código que falta para que se llame al método 'writeText' cuando se haga clic en la etiqueta", "codigo": "<div>.\n <div id=\"app\">\n  <p>Click on the box below:</p>\n  <div ...=\"writeText\">\n    {{ text }}\n  </div>\n</div>\n<script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"></script>\n<script>\n  const app = Vue.createApp({\n    data() {\n      return {\n        text: ''\n      }\n    },    \n    methods: {\n      writeText() {\n        this.text = 'Hello World!'\n      }\n    }\n  })\n  app.mount('#app')\n</script>", "respuesta_correcta": [ "v-on:click" ] }, { "pregunta": "Hay una determinada palabra que debemos usar para llegar a las propiedades de los datos desde dentro de un método. ¿Qué palabra falta aquí? ", "codigo":"data() {\n return {\n text: ''\n }\n},\nmethods: {\n writeText() {\n ... .text = 'Hello World!'\n }\n}", "respuesta_correcta": ["this"] }, { "pregunta": "¿Qué falta para que el evento click se pase con el método como argumento?", "codigo": "<button v-on:click=\"addAnimal($..., 5)\">+5</button>", "respuesta_correcta": [ "event" ] } ] } ] },{ "_id": "6478844aa6b50346aa9d16ba", "titulo": "eventos", "respuestas_posibles":3, "questions": [ { "tipo": "test", "preguntas": [ { "pregunta": "¿Cuál es la sintaxis correcta para escuchar un evento personalizado?", "opciones": [ "@click=\"metodo\"", "@event=\"metodo\"", "@evento=\"metodo\"", "@evento-personalizado=\"metodo\"" ], "respuesta_correcta": 3 }, { "pregunta": "¿Cuál es la forma correcta de pasar parámetros a través de un evento personalizado?", "opciones": [ "@evento-personalizado=\"metodo(parametro)\"", "@evento-personalizado=\"metodo, parámetro\"", "@evento-personalizado=\"metodo:parametro\"", "@evento-personalizado=\"metodo($event, parámetro)\"" ], "respuesta_correcta": 3 } ] }, { "tipo": "verdadero_falso", "preguntas": [ { "pregunta": "Se puede utilizar el modificador \".once\" para escuchar un evento y asegurarse de que solo se dispare una vez.", "respuesta_correcta": "verdadero" }, { "pregunta": "Se puede utilizar el modificador \".stop\" para detener la propagación de un evento.", "respuesta_correcta": "verdadero" } ] }, { "tipo": "completar_codigo", "preguntas": [ { "pregunta": "Completa el siguiente fragmento de código para vincular un evento de clic en un elemento HTML a un método llamado \"handleClick\".", "codigo":"<button v-on:...=\"handleClick\">Haz clic aquí</button>", "respuesta_correcta": [ "click" ] }, { "pregunta": "Completa el siguiente fragmento de código para llamar al método \"handleKeyPress\" cuando se presione la tecla Enter en un campo de entrada.", "codigo": " <input v-on:... .enter=\"handleKeyPress\">", "respuesta_correcta": [ "keyup" ] }, { "pregunta": "Completa el siguiente fragmento de código para escuchar el evento de cambio en un elemento de selección y llamar al método \"handleChange\". ", "codigo": "<select v-on:...=\"handleChange\">\n  <option value=\"opcion1\">Opción 1</option>\n  <option value=\"opcion2\">Opción 2</option>\n  <option value=\"opcion3\">Opción 3</option>\n</select>", "respuesta_correcta": [ "change" ] } ] } ] },{ "_id": "6478844aa6b50346aa9d16bb", "titulo": "componentes", "respuestas_posibles":1, "questions": [ { "tipo": "test", "preguntas": [ { "pregunta": "¿Cuál de las siguientes afirmaciones sobre los componentes de Vue.js es correcta?", "opciones": [ "a) Los componentes de Vue.js son bloques de código HTML, CSS y JavaScript reutilizables.", "b) Los componentes de Vue.js solo pueden ser utilizados una vez en una aplicación.", "c) Los componentes de Vue.js solo pueden comunicarse con el componente padre.", "d) Los componentes de Vue.js no pueden tener su propio estado interno." ], "respuesta_correcta": 0 }, { "pregunta": "¿Cuál de las siguientes opciones describe mejor cómo se puede pasar información desde un componente padre a un componente hijo?", "opciones": [ "a) Mediante la directiva v-bind en la plantilla del componente hijo.", "b) Utilizando la función watch() para rastrear los cambios en el componente padre.", "c) A través de la función emit() para enviar eventos desde el componente hijo al componente padre.", "d) No es posible pasar información desde un componente padre a un componente hijo." ], "respuesta_correcta": 0 } ] }, { "tipo": "verdadero_falso", "preguntas": [ { "pregunta": "Los componentes permiten dividir la interfaz de usuario en partes más pequeñas y reutilizables.", "respuesta_correcta": "verdadero" }, { "pregunta": "Los componentes hijos pueden acceder directamente a las propiedades y métodos del componente padre.", "respuesta_correcta": "falso" } ] }, { "tipo": "completar_codigo", "preguntas": [ { "pregunta": "La siguiente línea en main.js agrega un componente a nuestro proyecto Vue:\napp.component('fish-type', FishType)\n¿Cómo podemos agregar este componente a App.vue?", "codigo": "<template>\n  <h1>Fish</h1>\n  <.../>\n</template>", "respuesta_correcta": [ "fish-type" ] } ] } ] },{ "_id": "6478844aa6b50346aa9d16bc", "titulo": "plantillas", "respuestas_posibles":1, "questions": [ { "tipo": "test", "preguntas": [ { "pregunta": "¿Cuál es la sintaxis correcta para definir un template?", "opciones": [ "<template>", "<template/>", "<template></template>", "Ninguna de las anteriores" ], "respuesta_correcta": 2 }, { "pregunta": "¿Cuál es la directiva de Vue.js que se utiliza para mostrar datos en un template?", "opciones": [ "v-model", "v-bind", "v-for", "v-show" ], "respuesta_correcta": 2 } ] }, { "tipo": "verdadero_falso", "preguntas": [ { "pregunta": "Indica si el código es correcto o incorrecto:\n<template>\n  <div>\n    <my-component :prop1=\"value1\"v-if=\"showComponent\"></my-component>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      value1: 'Hello',\n      showComponent: true\n    }\n  }\n}\n</script>", "respuesta_correcta": "verdadero" }, { "pregunta": "Los componentes pueden compartir directamente datos y métodos entre ellos sin necesidad de utilizar una instancia centralizada.", "respuesta_correcta": "falso" } ] }, { "tipo": "completar_codigo", "preguntas": [ { "pregunta": "Completa el siguiente fragmento de código para mostrar el contenido de la variable \"username\" solo si está definida, utilizando la sintaxis de plantillas de Vue.js:", "codigo": "<template>\n  <div>\n    <p>{{ ... }}</p>\n  </div>\n</template>", "respuesta_correcta": [ "username || ''" ] } ] } ] },{ "_id": "6478844aa6b50346aa9d16bd", "titulo": "routing", "questions": [ { "tipo": "test", "preguntas": [ { "pregunta": "¿Qué opción se utiliza para redirigir a una ruta diferente?\nA) redirect('/new-route')\nB) navigateTo('/new-route')\nC) router.push('/new-route')\nD) route('/new-route')\n\nRespuesta correcta: C) router.push('/new-route')", "opciones": [ "A) redirect('/new-route')", "B) navigateTo('/new-route')", "C) router.push('/new-route')", "D) route('/new-route')" ], "respuesta_correcta": 2 } ] }, { "tipo": "verdadero_falso", "preguntas": [ { "pregunta": "El routing solo se puede utilizar en aplicaciones de una sola página (SPA).", "respuesta_correcta": "falso" }, { "pregunta": "Para crear una ruta con parámetros opcionales, se utiliza el símbolo \"?\" al final del parámetro en la definición de la ruta.", "respuesta_correcta": "falso" }, { "pregunta": "El enrutamiento en Vue se configura en el archivo 'main.js'.", "respuesta_correcta": "falso" } ] } ] },{ "_id": "6478844aa6b50346aa9d16be", "titulo": "watchers", "respuestas_posibles":1, "questions": [ { "tipo": "test", "preguntas": [ { "pregunta": "¿Cuál es la función principal de los Watchers?", "opciones": [ "a) Actualizar automáticamente los datos en la vista cuando cambian el modelo de datos.", "b) Controlar la autenticación de usuarios en la aplicación.", "c) Gestionar las rutas y el enrutamiento en una aplicación de una sola página (SPA).", "d) Optimizar el rendimiento de la aplicación mediante la carga diferida de componentes." ], "respuesta_correcta": 0 }, { "pregunta": "¿Cuál es el orden en el que se ejecutan los watchers?", "opciones": [ "a) Se ejecutan en el orden en que se definen en el componente.", "b) Se ejecutan en un orden aleatorio para garantizar la eficiencia.", "c) Se ejecutan en función de la prioridad asignada a cada watcher.", "d) Se ejecutan en función de la dependencia entre los datos observados." ], "respuesta_correcta": 0 } ] }, { "tipo": "verdadero_falso", "preguntas": [ { "pregunta": "Ambos valores, el viejo y el nuevo están disponibles como argumentos de entrada para un método observador.", "respuesta_correcta": "verdadero" }, { "pregunta": "Los watchers solo se pueden definir dentro del ciclo de vida de un componente.", "respuesta_correcta": "falso" } ] }, { "tipo": "completar_codigo", "preguntas": [ { "pregunta": "El watcher en este ejercicio debe incrementar la propiedad de datos 'count' en uno cada vez que cambia la propiedad de datos 'rangeVal'. ¿Cómo debe llamarse el watcher?", "codigo": "", "respuesta_correcta": [ "rangeVal" ] } ] } ] },{ "_id": "6478844aa6b50346aa9d16bf", "titulo": "animation", "respuestas_posibles":7, "questions": [ { "tipo": "test", "preguntas": [ { "pregunta": "¿Cuál es la forma recomendada de realizar animaciones?", "opciones": [ "a) Utilizando la biblioteca externa Anime.js", "b) Usando la directiva v-animate", "c) Utilizando la propiedad CSS \"animation\" en los elementos", "d) No es posible realizar animaciones" ], "respuesta_correcta": 1 }, { "pregunta": "¿Cuál de los siguientes métodos se utiliza para controlar el tiempo de duración de una animación?", "opciones": [ "a) El atributo animation-duration en el elemento HTML.", "b) La propiedad duration en la directiva v-animate.", "c) La propiedad duration en la directiva transition.", "d) La clase duration en la biblioteca externa Anime.js." ], "respuesta_correcta": 2 } ] }, { "tipo": "verdadero_falso", "preguntas": [ { "pregunta": "Se pueden aplicar animaciones a los componentes utilizando la directiva v-animation.", "respuesta_correcta": "falso" }, { "pregunta": "Se pueden definir transiciones personalizadas utilizando la directiva v-transition.", "respuesta_correcta": "verdadero" } ] }, { "tipo": "completar_codigo", "preguntas": [ { "pregunta": "¿Qué componente específico de Vue usamos al animar un solo elemento?", "codigo": "<template> <h1>Add/Remove <p> Tag</h1> <button>{{btnText}}</button><br> <...><p>Hello World!</p></...></template>", "respuesta_correcta": [ "Transition" ] }, { "pregunta": "El componente <Transition> automáticamente nos brinda 6 clases CSS diferentes que podemos usar para animar un elemento. Complete los espacios en blanco para que se completen los 3 nombres de primera clase, en el orden correcto, para cuando un elemento se vuelve visible:", "codigo": "v-enter-..., v-enter-..., v-enter-...", "respuesta_correcta": [ "from", "active", "to" ] }, { "pregunta": "El componente <Transición> se puede utilizar al hojear los elementos, de modo que se vea bien cuando un elemento nuevo se hace visible y cuando se elimina un elemento antiguo. Complete los espacios en blanco para que el elemento antiguo se elimine por completo antes de agregar el nuevo elemento:", "codigo": "<Transition ...=...>", "respuesta_correcta": [ "mode", "out-in" ] }, { "pregunta": "¿Cuál es el nombre del componente específico de Vue que se usa para animar elementos creados o eliminados con v-for?", "codigo": "<... tag=\"ol\"><li v-for=\"x in products\" :key=\"x\">{{ x }}</...>", "respuesta_correcta": [ "TransitionGroup" ] } ] } ] },{ "_id": "6478844aa6b50346aa9d16c0", "titulo": "build", "respuestas_posibles":3, "questions": [ { "tipo": "test", "preguntas": [ { "pregunta": "¿Cuál es la forma recomendada de organizar los componentes en una aplicación?", "opciones": [ "a) No hay una forma específica, se puede organizar de cualquier manera.", "b) En una única carpeta llamada \"componentes\" sin subcarpetas.", "c) En carpetas separadas por funcionalidad, con sus respectivas subcarpetas y archivos.", "d) En carpetas separadas por tamaño de archivo, con las más pequeñas en una carpeta y las más grandes en otra." ], "respuesta_correcta": 2 }, { "pregunta": "¿Cuál de las siguientes opciones es la forma recomendada de gestionar las dependencias de un proyecto?", "opciones": [ "a) Descargar manualmente las dependencias e incluirlas en el proyecto.", "b) Utilizar un administrador de paquetes como npm o yarn para gestionar las dependencias.", "c) Copiar y pegar el código de las dependencias directamente en el proyecto.", "d) Utilizar un CDN (Content Delivery Network) para cargar las dependencias en tiempo de ejecución." ], "respuesta_correcta": 1 }, { "pregunta": "¿Qué es el sistema de \"slots\"?", "opciones": [ "a) Una característica que permite compartir datos entre diferentes componentes.", "b) Una forma de encapsular y reutilizar bloques de código HTML en diferentes componentes.", "c) Un sistema de rutas para navegar entre diferentes vistas en una aplicación Vue.js.", "d) Un mecanismo para crear componentes dinámicos en tiempo de ejecución." ], "respuesta_correcta": 1 } ] }, { "tipo": "verdadero_falso", "preguntas": [ { "pregunta": "El comando \"npm run serve\" se utiliza para compilar y servir una aplicación en un entorno de desarrollo local.", "respuesta_correcta": "verdadero" } ] }, { "tipo": "completar_codigo", "preguntas": [ { "pregunta": "El comando ... compila nuestro proyecto Vue en archivos .html, .js y .css que están optimizados para ejecutarse directamente en el ... .", "codigo": "", "respuesta_correcta": [ "build", "navegador" ] }, { "pregunta": "¿Cuál es el comando que necesitamos para escribir y compilar nuestro proyecto en archivos html, .js y .css que están optimizados para ejecutarse directamente en el navegador?", "codigo": "", "respuesta_correcta": [ "npm run build" ] } ] } ] },{ "_id": "6478844aa6b50346aa9d16c1", "titulo": "deployment", "questions": [ { "tipo": "test", "preguntas": [ { "pregunta": "¿Cuál es la forma común de implementar una aplicación en un servidor web?", "opciones": [ "a) Utilizando un servidor de aplicaciones como Apache o Nginx para servir los archivos estáticos generados por Vue.js.", "b) Utilizando un servicio de alojamiento en la nube como AWS o Heroku para desplegar la aplicación Vue.js.", "c) Publicando directamente los archivos del proyecto Vue.js en un repositorio Git.", "d) Insertando el código de la aplicación Vue.js en una página HTML estática." ], "respuesta_correcta": 0 }, { "pregunta": "¿Cuál es la forma recomendada de desplegar una aplicación en un servidor de producción?", "opciones": [ "a) Clonar el repositorio de Git en el servidor y ejecutar el comando \"npm install\" seguido de \"npm run build\" para compilar la aplicación.", "b) Utilizar una herramienta de construcción y despliegue como Vue CLI para generar los archivos estáticos de la aplicación y luego copiarlos en el servidor.", "c) Crear un archivo de configuración específico para el servidor y definir las rutas y configuraciones necesarias para la aplicación Vue.js.", "d) Publicar directamente el código fuente de la aplicación Vue.js en el servidor sin necesidad de compilar o generar archivos estáticos." ], "respuesta_correcta": 1 }, { "pregunta": "¿Cuál es la finalidad del archivo \"vue.config.js\" en un proyecto?", "opciones": [ "a) Configurar los ajustes del entorno de desarrollo local.", "b) Definir la configuración del enrutamiento de la aplicación Vue.js.", "c) Personalizar la configuración de construcción y despliegue del proyecto.", "d) Establecer las reglas de linting para el código fuente de Vue.js." ], "respuesta_correcta": 2 }, { "pregunta": "¿Cuál es la importancia de utilizar un archivo \".env\" en el despliegue de una aplicación?", "opciones": [ "a) Permite definir variables de entorno específicas para el despliegue en diferentes entornos (desarrollo, producción, etc.).", "b) Proporciona una capa adicional de seguridad para ocultar información sensible, como claves de API o credenciales.", "c) Ayuda a facilitar la configuración y la gestión de las variables de entorno necesarias para el correcto funcionamiento de la aplicación.", "d) Todas las anteriores." ], "respuesta_correcta": 3 } ] }, { "tipo": "verdadero_falso", "preguntas": [ { "pregunta": "¿El comando \"npm start\" también se puede utilizar para compilar y empaquetar un proyecto para el despliegue en producción?", "respuesta_correcta": "falso" }, { "pregunta": "¿Es posible utilizar un servicio de CDN (Content Delivery Network) para desplegar una aplicación y mejorar su rendimiento?", "respuesta_correcta": "verdadero" } ] } ] }]